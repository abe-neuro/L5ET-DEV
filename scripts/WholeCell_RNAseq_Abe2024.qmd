---
title: "Figures: Abe et al., 2024 (Nature) - Age assigment"
author: "Philipp Abe"
format: 
  html:
    embed-resources: true
editor: visual
---

# RNA-seq data

GEO accession number: GSE270951

https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE270951

# Preparation

## Libraries

```{r warning=FALSE,echo=TRUE}

library(Seurat)
library(dplyr)
library(ggplot2)
library(scales)
library(wesanderson)
library(scico)
library(RColorBrewer)
```

## Data

Download the Seurat file (LINK) Change file path to load "L5ET-DEV_Abe_2024.rds" (*DOWNLOADFOLDER*/L5ET-DEV_Abe_2024.rds)

```{r}
L5ET <- readRDS(file="E:/Seq/unige/snRNA-seq_out/Upload/data/L5ET-DEV_Abe_2024.rds")

DefaultAssay(L5ET) <- "SCT"
```

```{r Colors, echo=FALSE, message=FALSE, warning=FALSE}

#colors for groups -> check and adjust if needed
colAge <- brewer.pal(length(unique(L5ET$Age))+2, "Blues")[-c(1:2)]
colreg <- wes_palette("GrandBudapest1", n = 4)
colT18t <- wes_palette("Rushmore1", n = 3)
colT18pn <- rev(wes_palette("Moonrise1", n = 4))
col20pn <- wes_palette("Darjeeling2")
colRetro <- c("grey60","black")
HMinj <- colRetro
names(HMinj) <- unique(L5ET$injSite)

colpnCl <- c(rev(wes_palette("IsleofDogs2", n=4)), wes_palette("IsleofDogs1"))[1:length(unique(L5ET$cluster.id3))]

colpid <- rev(wes_palette("Moonrise1"))
HMpid <- colpid[1:3]
names(HMpid) <- sort(unique(L5ET$cluster.id3_named2))

HMcl <- colpnCl
names(HMcl) <- sort(unique(L5ET$cluster.id3_named))

HMT18t <- wes_palette("Rushmore1", n = 3)
names(HMT18t)<- sort(unique(L5ET@meta.data$predicted.id))

```

## load whole cells - ET neurons

Retrogradely labeled ET neurons at P7 and P21, respectively. "Whole" cells were isolated.

```{r}
sc <- readRDS(file = "E:/Seq/unige/snRNA-seq_out/data/PTsubset_wholeCell_2452PT_P7vsP27.rds")
```

```{r eval=FALSE,echo=TRUE}

DEGtime <- local({
  DefaultAssay(sc) <- "RNA"
  sc@meta.data$Age <- factor(sc@meta.data$age, levels = sort(unique(sc$age)))
  
  Idents(sc) <- "age"
  
  DEGtime <- FindAllMarkers(sc, assay = "RNA",
                            verbose = T,only.pos = F,test.use = "MAST")
  DEGtime  
})


# write.csv2(DEGtime, file=paste0(weg, format(Sys.Date(),"%y"),format(Sys.Date(),"%m"),"-L5ET_Revision_TimeOnly-DEG-wholeCellP7vs21-MAST_PosNeg.csv")) 
```

time genes

```{r}

DEGtime <- read.csv2(file="E:/Seq/unige/snRNA-seq_out/Upload/data/2402-L5ET_Revision_TimeOnly-DEG-wholeCellP7vs21-MAST.csv") 

DEGtime$diffPerc <- abs(DEGtime$pct.1 - DEGtime$pct.2)
# TopTime <- DEGtime |> top_n(n=100, wt="avg_log2FC")
TopTime <- DEGtime|> group_by(cluster) |> top_n(n=10, wt=diffPerc)
# FeaturePlot(sc, features = TopTime$gene)
DotPlot(sc, features = TopTime$gene, group.by = "age")+RotatedAxis()


DimPlot(sc, reduction = "pca", dims = c(1,3), group.by = "age")

##Meta gene
local({
  
  HMinj <- c("midnightblue","cornflowerblue")


agelist <- (unique(sc$age))
for (i in agelist) {
genelist <- DEGtime|> filter(cluster==i) |>top_n(n=10, wt=diffPerc)
genelist <- genelist$gene
a <- MetaFeature(sc, features = genelist,meta.name = paste0("MetaGene.7vs21.",i),assay = "RNA",slot = "data")
p1 <-VlnPlot(a, features = paste0("MetaGene.7vs21.",i),group.by = "age", pt.size = 0,cols = HMinj)
print(p1)

p2 <-FeaturePlot(a, features = paste0("MetaGene.7vs21.",i))
print(p2)

p0<- DimPlot(sc)
p3 <- DimPlot(sc, group.by = "age")
}
})
```

#L5 ET development

```{r UMAP}

DimPlot(sc, group.by = "age")+NoAxes()+
       scale_color_manual(values=c("midnightblue","cornflowerblue"))+theme(panel.background = element_rect(fill = "grey95"))

DimPlot(L5ET, group.by = "Age")+NoAxes()+
       scale_color_manual(values=colAge)+theme(panel.background = element_rect(fill = "grey95"))

```

### Split data set by library

```{r split by library}
#| echo: false
table(L5ET$orig.ident)

local({
  Idents(L5ET) <- "orig.ident"
  id <- unique(Idents(L5ET))
  for (i in id) {
  data1 <- subset(L5ET, idents=i)
  data1<- SCTransform(data1, verbose = F,
                     return.only.var.genes = F) 
  
  data1 <- RunPCA(data1, verbose = F)
  data1 <- RunUMAP(data1, dims = 1:30, reduction = "pca", #features = var.feat.sub,
                n.components = 2L) #check 2D or 3D embeddings-> here 2D, in 3D P4 and P8 are orthogonal
  data1 <- FindNeighbors(data1, dims = 1:30,reduction = "pca")
  data1 <- FindClusters(data1)

  p1 <- DimPlot(data1, group.by = "Age", pt.size = 2)+NoAxes()+theme(panel.background = element_rect(fill = "grey95"))+ggtitle(paste0(unique(data1$orig.ident)))
  print(p1)
  
  p2 <- FeaturePlot(data1, features = "cv.time", pt.size = 1.5)+scale_color_scico(palette = 'davos',direction = -1)+NoAxes()+theme(panel.background = element_rect(fill = "grey95"))+ggtitle(paste0(unique(data1$orig.ident)))
  print(p2)
  
  
  
  # DefaultAssay(data1) <- "RNA"
data1 <- NormalizeData(data1, normalization.method = "LogNormalize", scale.factor = 10000, assay = "RNA") 

  HMinj <- c("cornflowerblue","midnightblue")
    # agelist <- (unique(sc$age))
    # for (i in agelist) {
    # genelist <- DEGtime|> filter(cluster==i) |>top_n(n=10, wt=diffPerc)
    # genelist <- genelist$gene
    # # a <- MetaFeature(data1, features = genelist, meta.name = paste0("MetaGene.Young|Old.",i))
    # a <- MetaFeature(data1, features = genelist,meta.name = paste0("MetaGene.Young|Old.",i),assay = "RNA",slot = "data")
    # p3 <-VlnPlot(a, features = paste0("MetaGene.Young|Old.",i),group.by = "Age", pt.size = 0,cols = HMinj)
    # print(p3)
    # 
    # p4 <-FeaturePlot(a, features = paste0("MetaGene.Young|Old.",i))
    # print(p4)
    # }
    
    genelist <- DEGtime|> filter(cluster=="P21") |>top_n(n=10, wt=diffPerc)
    genelist <- genelist$gene
    # a <- MetaFeature(data1, features = genelist, meta.name = paste0("MetaGene.Young|Old.",i))
    a <- MetaFeature(data1, features = genelist,meta.name = paste0("MetaGene.Older"),assay = "RNA",slot = "data")
    p3 <-VlnPlot(a, features = paste0("MetaGene.Older"),group.by = "Age", pt.size = 0,cols = HMinj)+NoLegend()
    print(p3)
    
    p4 <-FeaturePlot(a, features = paste0("MetaGene.Older"), pt.size = 1.5)+NoAxes()
    print(p4)
  
  }
  
})


```
